/* eslint-disable @next/next/no-img-element */
import Head from "next/head";
import { useEffect, useState } from "react";
import styles from "../styles/home.module.css";
import Spinner from "../Components/Spinner";

export default function Home() {
  const [coinData, setCoinData] = useState([]);
  const [loading, setLoading] = useState(true);
  useEffect(() => {
    async function fetchData() {
      try {
        await fetch(
          "https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=false&locale=ar"
        )
          .then((response) => response.json())
          .then(setCoinData)
          .catch((error) => console.log(error));

        setLoading(false);
      } catch (error) {
        console.log(error);
        setLoading(false);
      }
    }
    fetchData();
  }, []);
  return (
    <>
      <Head>
        <title>Crypto A.D.</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/blockchain.png" />
      </Head>
      <main className={styles.main}>
        <header className={styles.header}>
          <h1 className={styles.title}>Crypto A.D. </h1>
        </header>
        {coinData?.map((coin) => {
          return (
            <div key={coin.id} className={styles.cryptoCard}>
              <div className={styles.coinCardHeader}>
                <div className={styles.coinInfo}>
                  <img
                    src={coin.image}
                    alt={coin.id}
                    className={styles.cryptoImage}
                  />
                  <div className={styles.coinTitles}>
                    <h1 className={styles.coinName}>{coin.id}</h1>
                    <p className={styles.coinSymbol}>{coin.symbol}</p>
                  </div>
                </div>

                <p className={styles.coinRank}>{coin.market_cap_rank}</p>
              </div>
              <div className={styles.cryptoCardFooter}>
                <div>
                  <div className={styles.priceContainer}>
                    <p className={styles.coinPrice}>
                      Current Price: ${coin.current_price}
                    </p>
                    <p
                      className={
                        coin.market_cap_change_percentage_24h >= 0
                          ? styles.coinPercentageProfit
                          : styles.coinPercentageLoss
                      }
                    >
                      {coin.market_cap_change_percentage_24h.toFixed(2)}%
                    </p>
                  </div>
                  <p className={styles.coinMax}>24hs Max: ${coin.high_24h} </p>
                  <p className={styles.coinLow}>24hs Low: ${coin.low_24h} </p>
                </div>
              </div>
            </div>
          );
        })}
        <footer className={styles.footer}>
          Copyright © 2023 Andrés Céspedes. All rights reserved.
        </footer>
      </main>
    </>
  );
}
